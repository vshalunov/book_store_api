plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.8.1'
    id "io.freefair.lombok" version "6.0.0-m2"
}

repositories {
    mavenCentral()
}

def allureVersion = '2.17.2',
    junitVersion = '5.8.2',
    selenideVersion = '6.1.1'

allure {
    version = allureVersion
    autoconfigure = true
    aspectjweaver = true
    configuration = "testImplementation"
    useJUnit5 {
        version = allureVersion
    }
}

dependencies {
    implementation 'io.qameta.allure:allure-java-commons:2.17.2'
    //noinspection GradlePackageUpdate
    testImplementation(
            "io.rest-assured:rest-assured:4.4.0",
            "io.rest-assured:json-schema-validator:4.4.0",
            "org.assertj:assertj-core:3.21.0",
            "org.aeonbits.owner:owner:1.0.12",
            "org.aspectj:aspectjweaver:1.9.7",
            "com.fasterxml.jackson.core:jackson-databind:2.11.2",
            "com.codeborne:selenide:$selenideVersion",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "io.qameta.allure:allure-rest-assured:$allureVersion",
            "org.junit.jupiter:junit-jupiter-api:$junitVersion")
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    sourceCompatibility = 11
    targetCompatibility = 11
}

tasks.withType(Test) {
    systemProperties(System.getProperties())
    useJUnitPlatform()

    testLogging {
        lifecycle {
//            events "started", "failed"
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

task high_priority_tests(type: Test) {
    useJUnitPlatform {
        includeTags "Critical"
        includeTags "Highest"
        includeTags "Blocker"
        includeTags "High"
    }
}

task web_test(type: Test) {
    useJUnitPlatform {
        includeTags 'Web'
    }
}
